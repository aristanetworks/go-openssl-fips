package libssl

/*
#include "golibssl.h"
*/
import "C"

// OpenSSL initialization options
const (
	OPENSSL_INIT_LOAD_CRYPTO_STRINGS = C.GO_OPENSSL_INIT_LOAD_CRYPTO_STRINGS
	OPENSSL_INIT_ADD_ALL_CIPHERS     = C.GO_OPENSSL_INIT_ADD_ALL_CIPHERS
	OPENSSL_INIT_ADD_ALL_DIGESTS     = C.GO_OPENSSL_INIT_ADD_ALL_DIGESTS
	OPENSSL_INIT_LOAD_CONFIG         = C.GO_OPENSSL_INIT_LOAD_CONFIG
)

// SSL/TLS options
const (
	SSL_OP_NO_SSLv2                                  = C.GO_SSL_OP_NO_SSLv2
	SSL_OP_NO_SSLv3                                  = C.GO_SSL_OP_NO_SSLv3
	SSL_OP_NO_TLSv1                                  = C.GO_SSL_OP_NO_TLSv1
	SSL_OP_NO_TLSv1_1                                = C.GO_SSL_OP_NO_TLSv1_1
	SSL_OP_NO_TLSv1_2                                = C.GO_SSL_OP_NO_TLSv1_2
	SSL_OP_NO_TLSv1_3                                = C.GO_SSL_OP_NO_TLSv1_3
	SSL_OP_ALL                                       = C.GO_SSL_OP_ALL
	SSL_OP_NO_TICKET                                 = C.GO_SSL_OP_NO_TICKET
	SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION    = C.GO_SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
	SSL_OP_NO_COMPRESSION                            = C.GO_SSL_OP_NO_COMPRESSION
	SSL_OP_CIPHER_SERVER_PREFERENCE                  = C.GO_SSL_OP_CIPHER_SERVER_PREFERENCE
	SSL_OP_TLS_ROLLBACK_BUG                          = C.GO_SSL_OP_TLS_ROLLBACK_BUG
)

// SSL verify modes
const (
	SSL_VERIFY_NONE                 = C.GO_SSL_VERIFY_NONE
	SSL_VERIFY_PEER                 = C.GO_SSL_VERIFY_PEER
	SSL_VERIFY_FAIL_IF_NO_PEER_CERT = C.GO_SSL_VERIFY_FAIL_IF_NO_PEER_CERT
	SSL_VERIFY_CLIENT_ONCE          = C.GO_SSL_VERIFY_CLIENT_ONCE
	SSL_VERIFY_POST_HANDSHAKE       = C.GO_SSL_VERIFY_POST_HANDSHAKE
)

// SSL_CTX_set_mode options
const (
	SSL_MODE_ENABLE_PARTIAL_WRITE       = C.GO_SSL_MODE_ENABLE_PARTIAL_WRITE
	SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER = C.GO_SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER
	SSL_MODE_AUTO_RETRY                 = C.GO_SSL_MODE_AUTO_RETRY
	SSL_MODE_RELEASE_BUFFERS            = C.GO_SSL_MODE_RELEASE_BUFFERS
)

// TLS version constants
const (
	TLS1_VERSION   = C.GO_TLS1_VERSION
	TLS1_1_VERSION = C.GO_TLS1_1_VERSION
	TLS1_2_VERSION = C.GO_TLS1_2_VERSION
	TLS1_3_VERSION = C.GO_TLS1_3_VERSION
)

// Error constants
const (
	SSL_ERROR_NONE             = C.GO_SSL_ERROR_NONE
	SSL_ERROR_SSL              = C.GO_SSL_ERROR_SSL
	SSL_ERROR_WANT_READ        = C.GO_SSL_ERROR_WANT_READ
	SSL_ERROR_WANT_WRITE       = C.GO_SSL_ERROR_WANT_WRITE
	SSL_ERROR_WANT_X509_LOOKUP = C.GO_SSL_ERROR_WANT_X509_LOOKUP
	SSL_ERROR_SYSCALL          = C.GO_SSL_ERROR_SYSCALL
	SSL_ERROR_ZERO_RETURN      = C.GO_SSL_ERROR_ZERO_RETURN
	SSL_ERROR_WANT_CONNECT     = C.GO_SSL_ERROR_WANT_CONNECT
	SSL_ERROR_WANT_ACCEPT      = C.GO_SSL_ERROR_WANT_ACCEPT
)

// X509 verification flags
const (
	X509_V_FLAG_USE_CHECK_TIME         = C.GO_X509_V_FLAG_USE_CHECK_TIME
	X509_V_FLAG_CRL_CHECK              = C.GO_X509_V_FLAG_CRL_CHECK
	X509_V_FLAG_CRL_CHECK_ALL          = C.GO_X509_V_FLAG_CRL_CHECK_ALL
	X509_V_FLAG_IGNORE_CRITICAL        = C.GO_X509_V_FLAG_IGNORE_CRITICAL
	X509_V_FLAG_X509_STRICT            = C.GO_X509_V_FLAG_X509_STRICT
	X509_V_FLAG_ALLOW_PROXY_CERTS      = C.GO_X509_V_FLAG_ALLOW_PROXY_CERTS
	X509_V_FLAG_POLICY_CHECK           = C.GO_X509_V_FLAG_POLICY_CHECK
	X509_V_FLAG_EXPLICIT_POLICY        = C.GO_X509_V_FLAG_EXPLICIT_POLICY
	X509_V_FLAG_INHIBIT_ANY            = C.GO_X509_V_FLAG_INHIBIT_ANY
	X509_V_FLAG_INHIBIT_MAP            = C.GO_X509_V_FLAG_INHIBIT_MAP
	X509_V_FLAG_NOTIFY_POLICY          = C.GO_X509_V_FLAG_NOTIFY_POLICY
	X509_V_FLAG_EXTENDED_CRL_SUPPORT   = C.GO_X509_V_FLAG_EXTENDED_CRL_SUPPORT
	X509_V_FLAG_USE_DELTAS             = C.GO_X509_V_FLAG_USE_DELTAS
	X509_V_FLAG_CHECK_SS_SIGNATURE     = C.GO_X509_V_FLAG_CHECK_SS_SIGNATURE
	X509_V_FLAG_TRUSTED_FIRST          = C.GO_X509_V_FLAG_TRUSTED_FIRST
	X509_V_FLAG_SUITEB_128_LOS_ONLY    = C.GO_X509_V_FLAG_SUITEB_128_LOS_ONLY
	X509_V_FLAG_SUITEB_192_LOS         = C.GO_X509_V_FLAG_SUITEB_192_LOS
	X509_V_FLAG_SUITEB_128_LOS         = C.GO_X509_V_FLAG_SUITEB_128_LOS
	X509_V_FLAG_PARTIAL_CHAIN          = C.GO_X509_V_FLAG_PARTIAL_CHAIN
	X509_V_FLAG_NO_ALT_CHAINS          = C.GO_X509_V_FLAG_NO_ALT_CHAINS
	X509_V_FLAG_NO_CHECK_TIME          = C.GO_X509_V_FLAG_NO_CHECK_TIME
)

// X509 verification return values
const (
    X509_V_OK                                     = C.GO_X509_V_OK
    X509_V_ERR_UNSPECIFIED                        = C.GO_X509_V_ERR_UNSPECIFIED
    X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT          = C.GO_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT
    X509_V_ERR_UNABLE_TO_GET_CRL                  = C.GO_X509_V_ERR_UNABLE_TO_GET_CRL
    X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE   = C.GO_X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE
    X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE    = C.GO_X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE
    X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY = C.GO_X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY
    X509_V_ERR_CERT_SIGNATURE_FAILURE             = C.GO_X509_V_ERR_CERT_SIGNATURE_FAILURE
    X509_V_ERR_CRL_SIGNATURE_FAILURE              = C.GO_X509_V_ERR_CRL_SIGNATURE_FAILURE
    X509_V_ERR_CERT_NOT_YET_VALID                 = C.GO_X509_V_ERR_CERT_NOT_YET_VALID
    X509_V_ERR_CERT_HAS_EXPIRED                   = C.GO_X509_V_ERR_CERT_HAS_EXPIRED
    X509_V_ERR_CRL_NOT_YET_VALID                  = C.GO_X509_V_ERR_CRL_NOT_YET_VALID
    X509_V_ERR_CRL_HAS_EXPIRED                    = C.GO_X509_V_ERR_CRL_HAS_EXPIRED
    X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD     = C.GO_X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD
    X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD      = C.GO_X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD
    X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD     = C.GO_X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD
    X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD     = C.GO_X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD
    X509_V_ERR_OUT_OF_MEM                         = C.GO_X509_V_ERR_OUT_OF_MEM
    X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT        = C.GO_X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT
    X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN          = C.GO_X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN
    X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY  = C.GO_X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY
    X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE    = C.GO_X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE
    X509_V_ERR_CERT_CHAIN_TOO_LONG                = C.GO_X509_V_ERR_CERT_CHAIN_TOO_LONG
    X509_V_ERR_CERT_REVOKED                       = C.GO_X509_V_ERR_CERT_REVOKED
    X509_V_ERR_NO_ISSUER_PUBLIC_KEY               = C.GO_X509_V_ERR_NO_ISSUER_PUBLIC_KEY
    X509_V_ERR_PATH_LENGTH_EXCEEDED               = C.GO_X509_V_ERR_PATH_LENGTH_EXCEEDED
    X509_V_ERR_INVALID_PURPOSE                    = C.GO_X509_V_ERR_INVALID_PURPOSE
    X509_V_ERR_CERT_UNTRUSTED                     = C.GO_X509_V_ERR_CERT_UNTRUSTED
    X509_V_ERR_CERT_REJECTED                      = C.GO_X509_V_ERR_CERT_REJECTED
)

// SSL and SSL_CTX ctrl constants
const (
	SSL_CTRL_OPTIONS              = C.GO_SSL_CTRL_OPTIONS
	SSL_CTRL_SET_TLSEXT_HOSTNAME  = C.GO_SSL_CTRL_SET_TLSEXT_HOSTNAME
	SSL_CTRL_SET_MIN_PROTO_VERSION = C.GO_SSL_CTRL_SET_MIN_PROTO_VERSION
	SSL_CTRL_SET_MAX_PROTO_VERSION = C.GO_SSL_CTRL_SET_MAX_PROTO_VERSION
)

const (
	TLSEXT_NAMETYPE_host_name = C.GO_TLSEXT_NAMETYPE_host_name
)